<chapter title="எழில் வழி கணினி திரையில் வரைபடங்கள்">
<section>

இதுவரை ‘எழில்’ மொழியைக் கொண்டு நிறைய விஷயங்களை ‘எழுதி’ப் பார்த்துவிட்டோம், ஒரு மாறுதலுக்காக, கொஞ்சம் ‘வரைந்து’ பார்ப்போமா?

வேடிக்கை இல்லை, நிஜமாகவே, ‘எழில்’ மொழியைக் கொண்டு படங்கள் வரையமுடியும். அடிப்படையான கோடு, வட்டம் போன்றவற்றில் தொடங்கி, கொஞ்சம் மெனக்கெட்டால் முழுமையான ஓவியங்களைக்கூட வரையமுடியும். அதைதான் இந்த அத்தியாயத்தில் கற்றுக்கொள்ளப்போகிறோம்!

இதற்கு நாம் பல புதிய "எழில்" குறிச்சொற்களைப் பயன்படுத்தவேண்டியிருக்கும். அவற்றில் சிலவற்றை முதலில் பட்டியல் போட்டுவிடுவோம்:
<list>
	* முன்னாடி
	* வலது
	* இடது
	* பின்னாடி
	* எழுதுகோல்மேலே
	* எழுதுகோல்கீழே
</list>
இந்தப் பெயர்களைப் பார்த்தாலே, அவை என்ன செய்யும் என்பது உங்களுக்கு ஓரளவு புரியும். அவற்றைப் பயன்படுத்தி நிரல் எழுதத் தொடங்குமுன், ‘எழுதுகோல்’ என்றால் என்ன?

சாதாரணமாக நாம் ஒரு காகிதத்தில் படம் வரையும்போது, எழுதுகோல் என்பது பேனா, அல்லது பென்சில். அதைக் காகிதத்தின்மீது வைத்துப் பல திசைகளில் இழுக்கிறோம். அப்படியே படம் உருவாகிறது.

கணினியிலும் அதுபோல் ஓர் எழுதுகோல் இருப்பதாகக் கற்பனை செய்துகொள்ளுங்கள், உங்களுடைய "எழில்" நிரல்மூலமாக, அந்த எழுதுகோலைப் பல திசைகளில் நகர்த்துகிறீர்கள், படம் வரைகிறீர்கள்.

உதாரணமாக, ஓர் எளிய பயிற்சி. கோடு ஒன்றை வரையப் பழகுவோம்.

காகிதத்தில் கோடு வரைவது சுலபம். எழுதுகோலை ஓர் இடத்தில் வைத்து, அங்கிருந்து வலதுபக்கமாகக் கொஞ்சம் நகர்த்தினால் கோடு உருவாகிவிடும். அவ்வளவுதான்.

கணினியிலும் அதையே செய்யலாம். இதோ இப்படி:

<code>
#*************************************
முன்னாடி(50)
#*************************************
</code>

அவ்வளவுதான், திரையின் மையத்தில் உள்ள எழுதுகோல், 50 புள்ளிகள் வலதுபக்கமாக நகரும். கோடு உருவாகிவிடும்.

அதே கோட்டை மேலிருந்து கீழாக வரைவதென்றால்? இதோ இப்படி:

<code>
#*************************************
வலது(90)
முன்னாடி(50)
#*************************************
</code>
இங்கே நாம் எழுதுகோலை வலதுபக்கமாக 90 பாகைகள் திருப்புகிறோம் (அதாவது கீழ்நோக்கி), பின்னர் 50 புள்ளிகள் முன்னே நகர்கிறோம் (அதாவது, கீழே), இதனால் மேலிருந்து கீழே ஒரு கோடு உருவாகிவிடுகிறது. மிகச் சுலபம்!

இதையே இன்னும் கொஞ்சம் நீட்டி, ஒரு முழுச் சதுரம் வரைவோமா?

<code>
#*************************************
முன்னாடி(50)
வலது(90)
முன்னாடி(50)
வலது(90)
முன்னாடி(50)
வலது(90)
முன்னாடி(50)
வலது(90)
#*************************************
</code>
இந்தச் சதுரம் அழகாக இருக்கிறது, பக்கத்திலேயே இன்னொரு பெரிய சதுரம் வரையவேண்டும். எப்படி?

அதற்கு நாம் "எழுதுகோல்மேலே" மற்றும் "எழுதுகோல்கீழே" என்ற கட்டளைகளைப் பயன்படுத்தவேண்டும். இதன்மூலம் உங்கள் திரையில் எழுதுகோல் நகரும், ஆனால் படம் வரையாது, இதோ இப்படி:
<code>
#*************************************
எழுதுகோல்மேலே()
முன்னாடி(200)
எழுதுகோல்கீழே()

முன்னாடி(100)
வலது(90)
முன்னாடி(100)
வலது(90)
முன்னாடி(100)
வலது(90)
முன்னாடி(100)
#*************************************
</code>

இப்போது, இந்த நிரல் முழுவதையும் இயக்கிப் பார்த்தால், உங்கள் திரையில் இரண்டு சதுரங்களைக் காணலாம்.

சதுரம் வரைவதற்காக இவ்வளவு தூரம் சிரமப்படாமல், எளிதாக ஒரு "வரை" குறிச்சொல்லைப் பயன்படுத்தியும் வரையலாம், இதோ இப்படி:

<code>
#*************************************
அ = 0

@(அ &lt; 4) வரை

	முன்னாடி(50)
	வலது(90)
	அ = அ + 1

முடி
#*************************************
</code>
இந்தப் படம் அழகாக இருக்கிறது. அடுத்து, நான் இதை அழித்துவிட்டு இன்னொரு படத்தை வரைவதற்கு விரும்புகிறேன். அது எப்படி?

அதற்கு நீங்கள் turtle_reset என்ற கட்டளையைப் பயன்படுத்தவேண்டும். இதோ இப்படி:

<code>
#*************************************
turtle_reset()
#*************************************
</code>
அடுத்து பல வண்ணங்களில் இன்னும் பெரிய படங்களை வரைவதற்குப் பழகுவோம். இதற்கு நீங்கள் பயன்படுத்தவேண்டிய குறிச்சொல், turtle_color.

உதாரணமாக, ஒரு சிவப்புச் சதுரம் வரையலாமா? இதோ இப்படி:

<code>
#*************************************
அ = 0

turtle_color("red")

@(அ &lt; 4) வரை

	முன்னாடி(50)
	வலது(90)
	அ = அ + 1

முடி
#*************************************
</code>

முன்பு பார்த்த அதே நிரல்தான், கூடுதலாக, turtle_color என்ற குறிச்சொல்லைத் தந்து, சிவப்பு நிறத்தில் வரையும்படி கணினிக்குச் சொல்கிறோம். அவ்வளவுதான் வித்தியாசம்.

அடுத்து, சிவப்பு நிறத்தில் ஒரு வட்டம் வரையலாமா? அதற்கு நாம் கூடுதலாகப் பயன்படுத்தவேண்டிய குறிச்சொற்கள் இரண்டு: turtle_fill &amp; turtle_circle

<code>
#*************************************
turtle_color("red")
turtle_fill(True)
turtle_circle(100)
#*************************************
</code>

ஒருவேளை நீங்கள் அரைவட்டம் வரைய விரும்பினால், turtle_circle என்ற குறிச்சொல்லுடன், 180 பாகை என்கிற எண்ணையும் சேர்த்துக் கொடுங்கள்:

<code>
#*************************************
turtle_circle(100, 180)
#*************************************
</code>
அப்படியானால், கால்வட்டத்துக்கு என்ன செய்வீர்கள்?

<code>
#*************************************
turtle_circle(100, 90)
#*************************************
</code>
மிக எளிமைதான். இல்லையா?

அடுத்து, கொஞ்சம் சிரமமான ஒரு வடிவத்தை வரைவோம்: பச்சை நிற நட்சத்திரம்!

இந்த நிரல் பார்ப்பதற்குச் சற்று சிரமமாக இருக்கும், ஆனால், காகிதத்தில் நட்சத்திரம் வரைந்து, உங்கள் பேனா எந்தத் திசையில் எவ்வளவு தூரம் நகர்கிறது என்று ஒருமுறை கவனித்தால் தெளிவாகப் புரிந்துவிடும்:

<code>
#*************************************
turtle_color("green")
வலது(36)
முன்னாடி(100)
வலது(144)
முன்னாடி(100)
வலது(144)
முன்னாடி(100)
வலது(144)
முன்னாடி(100)
வலது(144)
முன்னாடி(100)
#*************************************
</code>

இதுவரை நீங்கள் கற்றுக்கொண்ட விஷயங்களைப் பயன்படுத்தி, ஒரே செயலைப் பலமுறை செய்யும் கணினியின் திறமையையும் ஒருங்கிணைத்தால், ஏராளமான புதுப்புது விஷயங்களை நீங்கள் வரைந்து பார்த்துக் கலக்கமுடியும்.

இதை நிரூபிக்கும்வண்ணம், உங்களுக்கு இப்போது ஒரு பயிற்சி. "யின் யாங்" என்ற பிரபலமான சின்னத்தைப்பற்றிக் கேள்விப்பட்டிருப்பீர்கள். தெரியாது என்றால், இணையத்தில் தேடுங்கள், "எழில்" மொழியில் அதனை வரைந்து பாருங்கள்

விடை:
<code>
#*************************************

    turtle_color("black")
    turtle_fill(True)
    turtle_circle(100, 180)
    turtle_circle(200, 180)
     இடது(180)
    turtle_circle( -100 , 180 )
    turtle_color("white")
    turtle_fill(True)
    turtle_color("black")
     இடது(90)
     எழுதுகோல்மேலே()
     முன்னாடி(200*0.375)
     வலது(90)
     எழுதுகோல்கீழே()
    turtle_circle(200*0.125)
     இடது(90)
    turtle_fill(False)
     எழுதுகோல்மேலே()
     பின்னாடி(200*0.375)
     எழுதுகோல்கீழே()
     இடது(90)

#*************************************
</code>

</section>
</chapter>